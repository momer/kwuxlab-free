---
# IMPORTANT:
# This playbook, for the kwuxlab free configuration, expects (requires) that
# 1. Within your host inventory configuration (`inventories/test/hostip.ini`),
#    some nodes have been designated as Consul Servers, by setting the variable
#    `consul_server=true`, while others have been configured as
#    clients by simply not setting that variable, or setting it to false.
- hosts: "{{ variable_hosts | default('kwuxlab_hosts') }}"
  strategy: linear
  become: yes
  gather_facts: yes
  handlers:
    - include: handlers/main.yml
  vars_files:
    - vars/shared.yml
  vars:
    target_consul_datacenter_members: "{{ groups['docker'] | map('extract', hostvars) | selectattr('datacenter', 'equalto', datacenter) | map(attribute='datacenter') | list }}"

    # Note: consul_node_role hostvar is required by the Vault/Consul playbooks
    # in some scenarios.
    #
    # We will have duplication of consul_node_role and consul_role variables
    # as a temporary fix.
    target_consul_join_wan: >
      [ {% for host in groups['docker'] %}
        {% if ansible_nodename != hostvars[host]['ansible_facts']['nodename'] and hostvars[host]['consul_node_role'] == 'server' %}
        '{{ hostvars[host]['ansible_facts']['nodename'] }}'
        {% if not loop.last %},{% endif %}
        {% endif %}
        {% endfor %}
      ]

    target_consul_local_configuration: >
      {
        'node_name': '{{ ansible_facts['nodename'] }}',
        'disable_keyring_file': true,
        'advertise_addr': '{{ target_consul_resolved_host_default_ipv4_address }}',
        'retry_join_wan': {{ target_consul_join_wan }},
        'ui_config': {
          'enabled': true
        }
      }

  tags:
    - kwuxlab_free_service_consul
  pre_tasks:
    - name: Load variables for this environment
      include_vars: "{{ env }}_environment.yml"
      tags:
        - gather
      no_log: true

    - name: Investigate target_consul_datacenter_members
      ansible.builtin.debug:
        msg: "{{ target_consul_datacenter_members }}"

    - name: Investigate target_consul_join_wan
      ansible.builtin.debug:
        msg: "{{ target_consul_join_wan }}"

    - name: Investigate consul local config
      ansible.builtin.debug:
        msg: "{{ target_consul_local_configuration }}"

    - name: Collect facts
      ansible.builtin.setup:
      tags:
        - gather

    - name: Update apt cache if needed
      apt:
        update_cache: yes

    - name: Install unzip if required
      apt:
        name: unzip

  roles:
    - role: ansible-consul
      vars:
        consul_version: "{{ target_consul_version }}"
        consul_config_path: "{{ target_consul_root_directory }}"
        consul_debug: true
        consul_group_name: docker
        consul_data_path: "{{ target_consul_data_directory }}"
        consul_user: root
        consul_manage_user: false
        consul_group: root
        consul_manage_group: false
        consul_join_wan: "{{ target_consul_join_wan }}"
        consul_bootstrap_expect: "{{ target_consul_datacenter_members | length }}"
        consul_datacenter: "{{ datacenter }}"
        consul_bind_address: "{{ target_consul_bind_address }}"
        consul_client_address: "{{ target_consul_bind_address }}"
        consul_advertise_address: "{{ target_consul_resolved_host_default_ipv4_address }}"
        consul_advertise_address_wan: "{{ target_consul_resolved_host_default_ipv4_address }}"
        consul_node_name: "{{ ansible_facts['nodename'] }}"
        consul_addresses:
          dns: "127.0.0.1"
          http: "0.0.0.0"
          https: "0.0.0.0"
          rpc: "0.0.0.0"
          grpc: "0.0.0.0"
        consul_tls_enable: false
        consul_ports:
          http: "8500"
          https: "-1"
          rpc: "8400"
          serf_lan: "8301"
          serf_wan: "8302"
          server: "8300"
          grpc: "8502"
          dns: "53"
        consul_install_upgrade: true
        consul_install_remotely: true
        consul_node_role: "{{ 'server' if (consul_server is defined and ((consul_server | bool) is sameas true)) else 'client' }}"
        consul_connect_enabled: true
        # See Consul documentation for cert generation, etc.
        # https://learn.hashicorp.com/tutorials/consul/tls-encryption-secure
        consul_encrypt_verify_outgoing: false
        consul_encrypt_verify_incoming: false

      tags:
        - consul